/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/matches/results/route";
exports.ids = ["app/api/matches/results/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmatches%2Fresults%2Froute&page=%2Fapi%2Fmatches%2Fresults%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmatches%2Fresults%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmatches%2Fresults%2Froute&page=%2Fapi%2Fmatches%2Fresults%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmatches%2Fresults%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_runner_workspace_src_app_api_matches_results_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/matches/results/route.ts */ \"(rsc)/./src/app/api/matches/results/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/matches/results/route\",\n        pathname: \"/api/matches/results\",\n        filename: \"route\",\n        bundlePath: \"app/api/matches/results/route\"\n    },\n    resolvedPagePath: \"/home/runner/workspace/src/app/api/matches/results/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_src_app_api_matches_results_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZtYXRjaGVzJTJGcmVzdWx0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWF0Y2hlcyUyRnJlc3VsdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZtYXRjaGVzJTJGcmVzdWx0cyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNXO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9hcHAvYXBpL21hdGNoZXMvcmVzdWx0cy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWF0Y2hlcy9yZXN1bHRzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbWF0Y2hlcy9yZXN1bHRzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9tYXRjaGVzL3Jlc3VsdHMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9hcHAvYXBpL21hdGNoZXMvcmVzdWx0cy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmatches%2Fresults%2Froute&page=%2Fapi%2Fmatches%2Fresults%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmatches%2Fresults%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/matches/results/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/matches/results/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\");\n\n\nasync function GET(request) {\n    try {\n        const db = new _lib_database__WEBPACK_IMPORTED_MODULE_1__.DatabaseService();\n        const searchParams = request.nextUrl.searchParams;\n        const page = parseInt(searchParams.get('page') || '1');\n        const limit = parseInt(searchParams.get('limit') || '50');\n        const offset = (page - 1) * limit;\n        const result = db.getMatches('completed', limit, offset);\n        const response = {\n            matches: result.matches,\n            total: result.total,\n            page,\n            per_page: limit,\n            has_next: offset + limit < result.total\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: response\n        });\n    } catch (error) {\n        console.error('Error fetching completed matches:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Failed to fetch completed matches'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9tYXRjaGVzL3Jlc3VsdHMvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBQ1A7QUFHMUMsZUFBZUUsSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGLE1BQU1DLEtBQUssSUFBSUgsMERBQWVBO1FBQzlCLE1BQU1JLGVBQWVGLFFBQVFHLE9BQU8sQ0FBQ0QsWUFBWTtRQUVqRCxNQUFNRSxPQUFPQyxTQUFTSCxhQUFhSSxHQUFHLENBQUMsV0FBVztRQUNsRCxNQUFNQyxRQUFRRixTQUFTSCxhQUFhSSxHQUFHLENBQUMsWUFBWTtRQUNwRCxNQUFNRSxTQUFTLENBQUNKLE9BQU8sS0FBS0c7UUFFNUIsTUFBTUUsU0FBU1IsR0FBR1MsVUFBVSxDQUFDLGFBQWFILE9BQU9DO1FBRWpELE1BQU1HLFdBQThCO1lBQ2xDQyxTQUFTSCxPQUFPRyxPQUFPO1lBQ3ZCQyxPQUFPSixPQUFPSSxLQUFLO1lBQ25CVDtZQUNBVSxVQUFVUDtZQUNWUSxVQUFVUCxTQUFTRCxRQUFRRSxPQUFPSSxLQUFLO1FBQ3pDO1FBRUEsT0FBT2hCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLE1BQU1QO1FBQ1I7SUFFRixFQUFFLE9BQU9RLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHFDQUFxQ0E7UUFDbkQsT0FBT3RCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RFLE9BQU87UUFDVCxHQUF3QjtZQUFFRSxRQUFRO1FBQUk7SUFDeEM7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9zcmMvYXBwL2FwaS9tYXRjaGVzL3Jlc3VsdHMvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IERhdGFiYXNlU2VydmljZSB9IGZyb20gJ0AvbGliL2RhdGFiYXNlJztcbmltcG9ydCB7IEFwaVJlc3BvbnNlLCBNYXRjaExpc3RSZXNwb25zZSB9IGZyb20gJ0AvdHlwZXMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZGIgPSBuZXcgRGF0YWJhc2VTZXJ2aWNlKCk7XG4gICAgY29uc3Qgc2VhcmNoUGFyYW1zID0gcmVxdWVzdC5uZXh0VXJsLnNlYXJjaFBhcmFtcztcbiAgICBcbiAgICBjb25zdCBwYWdlID0gcGFyc2VJbnQoc2VhcmNoUGFyYW1zLmdldCgncGFnZScpIHx8ICcxJyk7XG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpIHx8ICc1MCcpO1xuICAgIGNvbnN0IG9mZnNldCA9IChwYWdlIC0gMSkgKiBsaW1pdDtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGRiLmdldE1hdGNoZXMoJ2NvbXBsZXRlZCcsIGxpbWl0LCBvZmZzZXQpO1xuICAgIFxuICAgIGNvbnN0IHJlc3BvbnNlOiBNYXRjaExpc3RSZXNwb25zZSA9IHtcbiAgICAgIG1hdGNoZXM6IHJlc3VsdC5tYXRjaGVzLFxuICAgICAgdG90YWw6IHJlc3VsdC50b3RhbCxcbiAgICAgIHBhZ2UsXG4gICAgICBwZXJfcGFnZTogbGltaXQsXG4gICAgICBoYXNfbmV4dDogb2Zmc2V0ICsgbGltaXQgPCByZXN1bHQudG90YWxcbiAgICB9O1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiByZXNwb25zZVxuICAgIH0gYXMgQXBpUmVzcG9uc2U8TWF0Y2hMaXN0UmVzcG9uc2U+KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNvbXBsZXRlZCBtYXRjaGVzOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBjb21wbGV0ZWQgbWF0Y2hlcydcbiAgICB9IGFzIEFwaVJlc3BvbnNlPG51bGw+LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsIkRhdGFiYXNlU2VydmljZSIsIkdFVCIsInJlcXVlc3QiLCJkYiIsInNlYXJjaFBhcmFtcyIsIm5leHRVcmwiLCJwYWdlIiwicGFyc2VJbnQiLCJnZXQiLCJsaW1pdCIsIm9mZnNldCIsInJlc3VsdCIsImdldE1hdGNoZXMiLCJyZXNwb25zZSIsIm1hdGNoZXMiLCJ0b3RhbCIsInBlcl9wYWdlIiwiaGFzX25leHQiLCJqc29uIiwic3VjY2VzcyIsImRhdGEiLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/matches/results/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseService: () => (/* binding */ DatabaseService),\n/* harmony export */   getDatabase: () => (/* binding */ getDatabase)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Database instance\nlet db = null;\nfunction getDatabase() {\n    if (!db) {\n        const dbPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'vlr_matches.db');\n        db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(dbPath);\n        // Enable WAL mode for better performance\n        db.pragma('journal_mode = WAL');\n        // Initialize database schema\n        initializeSchema();\n    }\n    return db;\n}\nfunction initializeSchema() {\n    const db = getDatabase();\n    // Create tables\n    db.exec(`\n    CREATE TABLE IF NOT EXISTS teams (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      flag_url TEXT,\n      logo_url TEXT,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    );\n\n    CREATE TABLE IF NOT EXISTS tournaments (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      logo_url TEXT,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    );\n\n    CREATE TABLE IF NOT EXISTS matches (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      vlr_match_id TEXT NOT NULL UNIQUE,\n      team1_id INTEGER,\n      team2_id INTEGER,\n      tournament_id INTEGER,\n      status TEXT NOT NULL DEFAULT 'upcoming',\n      match_time DATETIME,\n      match_format TEXT DEFAULT 'Bo3',\n      stage TEXT,\n      team1_score INTEGER DEFAULT 0,\n      team2_score INTEGER DEFAULT 0,\n      match_url TEXT,\n      vod_url TEXT,\n      stats_url TEXT,\n      maps_data TEXT, -- JSON string\n      player_stats TEXT, -- JSON string\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n      FOREIGN KEY (team1_id) REFERENCES teams (id),\n      FOREIGN KEY (team2_id) REFERENCES teams (id),\n      FOREIGN KEY (tournament_id) REFERENCES tournaments (id)\n    );\n\n    CREATE TABLE IF NOT EXISTS scraping_logs (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      scrape_type TEXT NOT NULL,\n      url TEXT NOT NULL,\n      status TEXT NOT NULL,\n      error_message TEXT,\n      matches_found INTEGER DEFAULT 0,\n      created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n    );\n\n    -- Indexes for performance\n    CREATE INDEX IF NOT EXISTS idx_matches_status ON matches(status);\n    CREATE INDEX IF NOT EXISTS idx_matches_vlr_id ON matches(vlr_match_id);\n    CREATE INDEX IF NOT EXISTS idx_matches_time ON matches(match_time);\n    CREATE INDEX IF NOT EXISTS idx_scraping_logs_created ON scraping_logs(created_at);\n  `);\n}\nclass DatabaseService {\n    constructor(){\n        this.db = getDatabase();\n    }\n    // Team operations\n    getOrCreateTeam(name, flagUrl, logoUrl) {\n        if (!name || name.toLowerCase() === 'tbd' || name === '–' || name === '-') {\n            throw new Error('Invalid team name');\n        }\n        // Try to find existing team\n        const existing = this.db.prepare('SELECT * FROM teams WHERE name = ?').get(name);\n        if (existing) {\n            return existing;\n        }\n        // Create new team\n        const result = this.db.prepare(`\n      INSERT INTO teams (name, flag_url, logo_url)\n      VALUES (?, ?, ?)\n    `).run(name, flagUrl, logoUrl);\n        return {\n            id: result.lastInsertRowid,\n            name,\n            flag_url: flagUrl,\n            logo_url: logoUrl,\n            created_at: new Date().toISOString()\n        };\n    }\n    // Tournament operations\n    getOrCreateTournament(name, logoUrl) {\n        if (!name) {\n            throw new Error('Invalid tournament name');\n        }\n        // Try to find existing tournament\n        const existing = this.db.prepare('SELECT * FROM tournaments WHERE name = ?').get(name);\n        if (existing) {\n            return existing;\n        }\n        // Create new tournament\n        const result = this.db.prepare(`\n      INSERT INTO tournaments (name, logo_url)\n      VALUES (?, ?)\n    `).run(name, logoUrl);\n        return {\n            id: result.lastInsertRowid,\n            name,\n            logo_url: logoUrl,\n            created_at: new Date().toISOString()\n        };\n    }\n    // Match operations\n    saveMatch(matchData) {\n        const transaction = this.db.transaction(()=>{\n            // Get or create teams and tournament\n            let team1;\n            let team2;\n            let tournament;\n            if (matchData.team1_name) {\n                team1 = this.getOrCreateTeam(matchData.team1_name);\n            }\n            if (matchData.team2_name) {\n                team2 = this.getOrCreateTeam(matchData.team2_name);\n            }\n            if (matchData.tournament_name) {\n                tournament = this.getOrCreateTournament(matchData.tournament_name);\n            }\n            // Check if match exists\n            const existing = this.db.prepare('SELECT * FROM matches WHERE vlr_match_id = ?').get(matchData.vlr_match_id);\n            const now = new Date().toISOString();\n            if (existing) {\n                // Update existing match\n                this.db.prepare(`\n          UPDATE matches SET\n            team1_id = ?,\n            team2_id = ?,\n            tournament_id = ?,\n            status = ?,\n            match_time = ?,\n            match_format = ?,\n            stage = ?,\n            team1_score = ?,\n            team2_score = ?,\n            match_url = ?,\n            vod_url = ?,\n            stats_url = ?,\n            maps_data = ?,\n            player_stats = ?,\n            updated_at = ?\n          WHERE vlr_match_id = ?\n        `).run(team1?.id, team2?.id, tournament?.id, matchData.status, matchData.match_time, matchData.match_format, matchData.stage, matchData.team1_score, matchData.team2_score, matchData.match_url, matchData.vod_url, matchData.stats_url, matchData.maps_data ? JSON.stringify(matchData.maps_data) : null, matchData.player_stats ? JSON.stringify(matchData.player_stats) : null, now, matchData.vlr_match_id);\n                return {\n                    ...existing,\n                    updated_at: now\n                };\n            } else {\n                // Create new match\n                const result = this.db.prepare(`\n          INSERT INTO matches (\n            vlr_match_id, team1_id, team2_id, tournament_id, status,\n            match_time, match_format, stage, team1_score, team2_score,\n            match_url, vod_url, stats_url, maps_data, player_stats\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).run(matchData.vlr_match_id, team1?.id, team2?.id, tournament?.id, matchData.status, matchData.match_time, matchData.match_format, matchData.stage, matchData.team1_score, matchData.team2_score, matchData.match_url, matchData.vod_url, matchData.stats_url, matchData.maps_data ? JSON.stringify(matchData.maps_data) : null, matchData.player_stats ? JSON.stringify(matchData.player_stats) : null);\n                return {\n                    id: result.lastInsertRowid,\n                    vlr_match_id: matchData.vlr_match_id,\n                    team1_id: team1?.id,\n                    team2_id: team2?.id,\n                    tournament_id: tournament?.id,\n                    status: matchData.status,\n                    match_time: matchData.match_time,\n                    match_format: matchData.match_format,\n                    stage: matchData.stage,\n                    team1_score: matchData.team1_score,\n                    team2_score: matchData.team2_score,\n                    match_url: matchData.match_url,\n                    vod_url: matchData.vod_url,\n                    stats_url: matchData.stats_url,\n                    maps_data: matchData.maps_data,\n                    player_stats: matchData.player_stats,\n                    created_at: now,\n                    updated_at: now\n                };\n            }\n        });\n        return transaction();\n    }\n    // Get matches with filtering\n    getMatches(status, limit = 50, offset = 0) {\n        let query = `\n      SELECT \n        m.*,\n        t1.name as team1_name, t1.flag_url as team1_flag,\n        t2.name as team2_name, t2.flag_url as team2_flag,\n        tour.name as tournament_name, tour.logo_url as tournament_logo\n      FROM matches m\n      LEFT JOIN teams t1 ON m.team1_id = t1.id\n      LEFT JOIN teams t2 ON m.team2_id = t2.id\n      LEFT JOIN tournaments tour ON m.tournament_id = tour.id\n    `;\n        const params = [];\n        if (status && status !== 'all') {\n            query += ' WHERE m.status = ?';\n            params.push(status);\n        }\n        // Get total count\n        let countQuery = 'SELECT COUNT(*) as count FROM matches m';\n        if (status && status !== 'all') {\n            countQuery += ' WHERE status = ?';\n        }\n        const totalResult = this.db.prepare(countQuery).get(status && status !== 'all' ? [\n            status\n        ] : []);\n        // Add ordering and pagination\n        query += ' ORDER BY m.created_at DESC LIMIT ? OFFSET ?';\n        params.push(limit, offset);\n        const rows = this.db.prepare(query).all(params);\n        const matches = rows.map((row)=>({\n                id: row.id,\n                vlr_match_id: row.vlr_match_id,\n                team1_id: row.team1_id,\n                team2_id: row.team2_id,\n                tournament_id: row.tournament_id,\n                status: row.status,\n                match_time: row.match_time,\n                match_format: row.match_format,\n                stage: row.stage,\n                team1_score: row.team1_score,\n                team2_score: row.team2_score,\n                match_url: row.match_url,\n                vod_url: row.vod_url,\n                stats_url: row.stats_url,\n                maps_data: row.maps_data ? JSON.parse(row.maps_data) : undefined,\n                player_stats: row.player_stats ? JSON.parse(row.player_stats) : undefined,\n                created_at: row.created_at,\n                updated_at: row.updated_at,\n                team1: row.team1_name ? {\n                    id: row.team1_id,\n                    name: row.team1_name,\n                    flag_url: row.team1_flag,\n                    created_at: ''\n                } : undefined,\n                team2: row.team2_name ? {\n                    id: row.team2_id,\n                    name: row.team2_name,\n                    flag_url: row.team2_flag,\n                    created_at: ''\n                } : undefined,\n                tournament: row.tournament_name ? {\n                    id: row.tournament_id,\n                    name: row.tournament_name,\n                    logo_url: row.tournament_logo,\n                    created_at: ''\n                } : undefined\n            }));\n        return {\n            matches,\n            total: totalResult.count\n        };\n    }\n    // Get single match by ID\n    getMatch(id) {\n        const row = this.db.prepare(`\n      SELECT \n        m.*,\n        t1.name as team1_name, t1.flag_url as team1_flag,\n        t2.name as team2_name, t2.flag_url as team2_flag,\n        tour.name as tournament_name, tour.logo_url as tournament_logo\n      FROM matches m\n      LEFT JOIN teams t1 ON m.team1_id = t1.id\n      LEFT JOIN teams t2 ON m.team2_id = t2.id\n      LEFT JOIN tournaments tour ON m.tournament_id = tour.id\n      WHERE m.id = ?\n    `).get(id);\n        if (!row) return null;\n        return {\n            id: row.id,\n            vlr_match_id: row.vlr_match_id,\n            team1_id: row.team1_id,\n            team2_id: row.team2_id,\n            tournament_id: row.tournament_id,\n            status: row.status,\n            match_time: row.match_time,\n            match_format: row.match_format,\n            stage: row.stage,\n            team1_score: row.team1_score,\n            team2_score: row.team2_score,\n            match_url: row.match_url,\n            vod_url: row.vod_url,\n            stats_url: row.stats_url,\n            maps_data: row.maps_data ? JSON.parse(row.maps_data) : undefined,\n            player_stats: row.player_stats ? JSON.parse(row.player_stats) : undefined,\n            created_at: row.created_at,\n            updated_at: row.updated_at,\n            team1: row.team1_name ? {\n                id: row.team1_id,\n                name: row.team1_name,\n                flag_url: row.team1_flag,\n                created_at: ''\n            } : undefined,\n            team2: row.team2_name ? {\n                id: row.team2_id,\n                name: row.team2_name,\n                flag_url: row.team2_flag,\n                created_at: ''\n            } : undefined,\n            tournament: row.tournament_name ? {\n                id: row.tournament_id,\n                name: row.tournament_name,\n                logo_url: row.tournament_logo,\n                created_at: ''\n            } : undefined\n        };\n    }\n    // Get all teams\n    getTeams() {\n        return this.db.prepare('SELECT * FROM teams ORDER BY name').all();\n    }\n    // Get all tournaments\n    getTournaments() {\n        return this.db.prepare('SELECT * FROM tournaments ORDER BY name').all();\n    }\n    // Log scraping activity\n    logScraping(type, url, status, errorMessage, matchesFound = 0) {\n        this.db.prepare(`\n      INSERT INTO scraping_logs (scrape_type, url, status, error_message, matches_found)\n      VALUES (?, ?, ?, ?, ?)\n    `).run(type, url, status, errorMessage, matchesFound);\n    }\n    // Get scraping logs\n    getScrapingLogs(limit = 20) {\n        return this.db.prepare(`\n      SELECT * FROM scraping_logs \n      ORDER BY created_at DESC \n      LIMIT ?\n    `).all(limit);\n    }\n    // Get database statistics\n    getStats() {\n        const matchCount = this.db.prepare('SELECT COUNT(*) as count FROM matches').get();\n        const liveCount = this.db.prepare('SELECT COUNT(*) as count FROM matches WHERE status = \"live\"').get();\n        const upcomingCount = this.db.prepare('SELECT COUNT(*) as count FROM matches WHERE status = \"upcoming\"').get();\n        const completedCount = this.db.prepare('SELECT COUNT(*) as count FROM matches WHERE status = \"completed\"').get();\n        const teamCount = this.db.prepare('SELECT COUNT(*) as count FROM teams').get();\n        const tournamentCount = this.db.prepare('SELECT COUNT(*) as count FROM tournaments').get();\n        return {\n            total_matches: matchCount.count,\n            live_matches: liveCount.count,\n            upcoming_matches: upcomingCount.count,\n            completed_matches: completedCount.count,\n            total_teams: teamCount.count,\n            total_tournaments: tournamentCount.count\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fmatches%2Fresults%2Froute&page=%2Fapi%2Fmatches%2Fresults%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmatches%2Fresults%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();